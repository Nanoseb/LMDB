#!/bin/bash
# LMDbmain by Nanoseb
# needs xmlstarlet zenity
# man : -bdd : generate the bdd for the current folder ($PWD) with the script lmdb
#            : interact with you to chose the perfect movie !


# Video player
player=mplayer

# cache
lmdbbdd="$HOME/.lmdbbdd.xml"

# temp
lmdbimage="/tmp/lmdbimage"

if [ ! -f "$lmdbbdd" ]
then
    echo -e "<xml>\n<table>\n</table>\n</xml>" > "$lmdbbdd"
fi 


if [ "$1" = "-bdd" ]
then
    liste=$(find -maxdepth 1 ! -regex '.*/\..*' -type f | grep -i "\.mkv\|\.avi\|\.mp4\|\.wmv")
    nb=$(wc -l <<< "$liste")
    i=1

    while read film
    do
        lmdb "$film"
        #echo $film
        ((i=i+1))
        bc <<< "$(echo "100*$i/$nb")"
    done <<< "$liste" | zenity --progress --no-cancel --title "Script LMDb" --auto-close --text "Mise à jour de la Bdd" --width=220 2> /dev/null
    zenity --info --title "Script LMDb" --text "Mise à jour faite" --width=220 2> /dev/null
    exit 0
fi




imagedl () {
    wget -q -O $lmdbimage "$1"
    if [ -s "$lmdbimage" ]
    then
        display $lmdbimage
        rm "$lmdbimage"
    fi
}

genrec=$(xmlstarlet sel -T -t -m "//film" -v genre -n "$lmdbbdd" | sed 's/,\ /\n/g' | grep -v "N/A" | sort | uniq -c | sort -rn | sed 's/^[^A-Z]*/\n/' | zenity --title="Script LMDb" --text="Genre :" --height=340 --width=220 --hide-header --list --multiple --checklist --column=1 --column=2)


ratingc=$(echo -e ";5\.|;6\.|;7\.|;8\.|;9\.|;10\.\n5\n;6\.|;7\.|;8\.|;9\.\n6\n;7\.|;8\.|;9\.\n7\n;8\.|;9\.\n8\n;9\.\n9" |  zenity --title="Script LMDb" --list --width=220 --height=200 --column=1 --column 1 --text="Note supérieur à" --hide-header --hide-column 1)


timec=$(echo -e "\n;0h\n<1h\n\n;1h\n1h<x<2h\n\n;2h\n2h<x<3h\n\n;3h|;4h|;5h\n>3h" |  zenity --title="Script LMDb" --list --checklist --multiple --width=220 --height=200 --column 1 --column 2 --column 3 --text="Durée" --hide-header --hide-column 2) 


realc=$(xmlstarlet sel -T -t -m "//film" -v real -n "$lmdbbdd" | sed 's/,\ /\n/g' | grep -v "N/A" | sort | uniq -c | sort -rn | sed 's/^[^A-Z]*/\n/' | zenity --title="Script LMDb" --text="Réalisateurs :" --height=500 --width=220 --hide-header --list --multiple --checklist --column=1 --column=2)


actorsc=$(xmlstarlet sel -T -t -m "//film" -v actors -n "$lmdbbdd" | sed 's/,\ /\n/g' | grep -v "N/A" | sort | uniq -c | sort -rn | sed 's/^[^A-Z]*/\n/' | zenity --title="Script LMDb" --text="Acteurs :" --height=500 --width=220 --hide-header --list --multiple --checklist --column=1 --column=2)




if [ -z "$actorsc" ]
then
    actorsc=";"
fi

if [ -z "$genrec" ]
then
    genrec=";"
fi

if [ -z "$ratingc" ]
then
    ratingc=";"
fi
if [ -z "$realc" ]
then
    realc=";"
fi
if [ -z "$timec" ]
then
   timec=";"
fi


test=1

while [ $test = 1 ]
do


    id=$(xmlstarlet sel -T -t -m "//film" -v "concat(id,';',year,';',title,';',real,';',actors,';',rating,';',genre,';',time)" -n "$lmdbbdd" | grep -E "$genrec" | grep -E "$ratingc" | grep -E "$realc" | grep -E "$timec" | grep -E "$actorsc" | sort -rnt $';' -k2,2 | awk -F";" '{print $1 "\n" $2 "\n" $3 "\n" $4}' | zenity --list --title "Script LMDb" --text="Choix du film :" --width=560 --height=750 --column id --hide-column=1 --column Année --column Titre --column Réalisateur)

    if [ $? = 1 ]
    then
        exit 0
    fi


    title=$(xmlstarlet sel -t -m "//film[id='$id']" -v title -n "$lmdbbdd")
    year=$(xmlstarlet sel -t -m "//film[id='$id']" -v year -n "$lmdbbdd")
    time=$(xmlstarlet sel -t -m "//film[id='$id']" -v time -n "$lmdbbdd")
    real=$(xmlstarlet sel -t -m "//film[id='$id']" -v real -n "$lmdbbdd")
    genre=$(xmlstarlet sel -t -m "//film[id='$id']" -v genre -n "$lmdbbdd")
    actors=$(xmlstarlet sel -t -m "//film[id='$id']" -v actors -n "$lmdbbdd")
    rating=$(xmlstarlet sel -t -m "//film[id='$id']" -v rating -n "$lmdbbdd")
    plot=$(xmlstarlet sel -t -m "//film[id='$id']" -v plot -n "$lmdbbdd")
    image=$(xmlstarlet sel -t -m "//film[id='$id']" -v image -n "$lmdbbdd")

    imagedl "$image" &

    echo -e "$title ($year) - $time \n de $real \n avec $actors \n $genre \n $rating/10 \n $plot" | zenity --text-info --title="Script LMDb"
    test=$?
    pkill display



done



chemin=$(xmlstarlet sel -t -m "//film[id='$id']" -v chemin -n "$lmdbbdd")

if [ -f "$chemin" ]
then
    $player "$chemin"
else
    hdd=$(awk -F"/" '{print $2}'<<< "$chemin")
    if [ "$hdd" = "media" ]
    then
        zenity --error --title "Script LMDb" --text "Ce film ne se trouve pas sur ton ordinateur, mais sur le disque dur : $(awk -F"/" '{print $3}' <<< "$chemin")" --width 400 --height 40
    else
        zenity --error --title "Script LMDb" --text "Ce film ne se trouve pas sur ton ordinateur..."
    fi
fi
