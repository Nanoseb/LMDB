#!/bin/bash
# Lmdb v2.0 by Nanoseb
# needs : xmllint xmlstarlet zenity
# man: -i file/movie name : shows info about file in a graphical view (zenity) (and write/update info in the bdd if $2 is a file)
#      -c file/movie name : shows info about file in console (and write/update info in the bdd if $2 is a file)
#      -a file : ask for the url of the imdb movie page to add the file in the base, usefull when the file name is not the exact title of the movie
#      file    : write info in the bdd


#temp
imdbpage="/tmp/imdbpage"
imdbimage="/tmp/imdbimage"

# BDD
lmdbbdd="$HOME/.lmdbbdd.xml"

if [ ! -f "$lmdbbdd" ]
then
    echo -e "<xml>\n<table>\n</table>\n</xml>" > "$lmdbbdd"
fi 


imagedl () {
    wget -q -O $imdbimage "$1"
    if [ -s "$imdbimage" ]
    then
        display $imdbimage
        rm "$imdbimage"
    fi
}

convertmins() {
    ((h=${1}/60))
    ((m=${1}%60))
    printf "%01dh%02d" $h $m
}

toxml () {
    sed 's/>/&gt;/g
s/</&lt;/g
s/\"/&quot;/g
s/&/&amps;/g'
}

omdbapi () {
    wget -q -O $imdbpage "http://www.omdbapi.com/?r=XML&plot=full&i=${id}"

    erreur=$(xmllint --xpath "//root/@response" "$imdbpage" | awk -F"\"" '{print $2}')
    image=$(xmllint --xpath "//root/movie/@poster" "$imdbpage" | awk -F"\"" '{print $2}')
    rating=$(xmllint --xpath "//root/movie/@imdbRating" "$imdbpage" | awk -F"\"" '{print $2}')
    plot=$(xmllint --xpath "//root/movie/@plot" "$imdbpage"  | awk -F"\"" '{print $2}')
    title=$(xmllint --xpath "//root/movie/@title" "$imdbpage"  | awk -F"\"" '{print $2}')
    year=$(xmllint --xpath "//root/movie/@year" "$imdbpage" | awk -F"\"" '{print $2}')
    time=$(xmllint --xpath "//root/movie/@runtime" "$imdbpage" | awk -F"\"" '{print $2}' | sed 's/\ //g' | sed 's/min//')
    real=$(xmllint --xpath "//root/movie/@director" "$imdbpage" | awk -F"\"" '{print $2}')
    genre=$(xmllint --xpath "//root/movie/@genre" "$imdbpage" | awk -F"\"" '{print $2}')
    actors=$(xmllint --xpath "//root/movie/@actors" "$imdbpage" | awk -F"\"" '{print $2}')

    rm $imdbpage

}

ecritcache () {

    omdbapi
    if [ "$erreur" = "False" ]
    then
        echo "film non trouvé"
        exit 1
    fi

    if [ -f "$chemin" ]
    then
        if [ -n $(grep "N/A" <<< "$time") ]
        then
            time=$(convertmins "$time")
        fi

        ################ écriture de la BDD ###########################

        sed -i '$d' "$lmdbbdd"
        sed -i '$d' "$lmdbbdd"

        echo -e "<film>
            <id>$id</id>
            <title>$title</title>
            <year>$year</year>
            <time>$time</time>
            <real>$real</real>
            <genre>$genre</genre>
            <actors>$actors</actors>
            <rating>$rating</rating>
            <plot>$plot</plot>
            <image>$image</image>
            <filename>$filename</filename>
            <chemin>$chemin</chemin>
            </film>
            </table>
            </xml>" >> "$lmdbbdd"
        ################################################################
    fi
}


litcache () {
    title=$(xmlstarlet sel -t -m "//film[id='$id']" -v title -n "$lmdbbdd")
    year=$(xmlstarlet sel -t -m "//film[id='$id']" -v year -n "$lmdbbdd")
    time=$(xmlstarlet sel -t -m "//film[id='$id']" -v time -n "$lmdbbdd")
    real=$(xmlstarlet sel -t -m "//film[id='$id']" -v real -n "$lmdbbdd")
    genre=$(xmlstarlet sel -t -m "//film[id='$id']" -v genre -n "$lmdbbdd")
    actors=$(xmlstarlet sel -t -m "//film[id='$id']" -v actors -n "$lmdbbdd")
    rating=$(xmlstarlet sel -t -m "//film[id='$id']" -v rating -n "$lmdbbdd")
    plot=$(xmlstarlet sel -t -m "//film[id='$id']" -v plot -n "$lmdbbdd")
    image=$(xmlstarlet sel -t -m "//film[id='$id']" -v image -n "$lmdbbdd")

    # mise à jour du chemin et du filename dans la bdd
    if [ -f "$chemin" ]
    then
        xmlstarlet ed -u "/xml/table/film[id='$id']/chemin" -v "$chemin" "$lmdbbdd" > $imdbpage
        mv $imdbpage "$lmdbbdd"

        xmlstarlet ed -u "/xml/table/film[id='$id']/filename" -v "$filename" "$lmdbbdd" > $imdbpage
        mv $imdbpage "$lmdbbdd"
    fi
}


if [ $1  = "-a" ]  #argument pour rentrer manuelement l'url de la page imdb
then
    arg="-c"
    id=$(zenity --entry --title "Script LMDb" | awk -F"/" '{print $5}')
    film="$2"
    chemin=$(toxml <<< "$PWD/$(sed 's/^\.\///' <<< "$film")")
    filename=$(basename "$film" | sed 's/\.[^.]*$//' | awk -F"[" '{print $1}' | sed 's/\ $//' | tr "'" " " | toxml)
    xmlstarlet ed -d "/xml/table/film[filename='$filename']" "$lmdbbdd" > $imdbpage
    mv $imdbpage "$lmdbbdd"
    xmlstarlet ed -d "/xml/table/film[id='$id']" "$lmdbbdd" > $imdbpage
    mv $imdbpage "$lmdbbdd"
    ecritcache

else

    if [ -z "$2" ]
    then
        film="$1"
        arg="-m"
    else
        film="$2"
        arg=$1
    fi

    chemin=$(toxml <<< "$PWD/$(sed 's/^\.\///' <<< "$film")")

    filename=$(basename "$film" | sed 's/\.[^.]*$//' | awk -F"[" '{print $1}' | sed 's/\ $//')

    motclef=$(sed 's/\ /\%20/g' <<< "$filename")

    filename=$(tr "'" " " <<< "$filename" | toxml)


    id=$(xmlstarlet sel -t -m "//film[filename='$filename']" -v id -n "$lmdbbdd")

    if [ -n "$id" ]    # test si le film est en cache
    then
        litcache
    else
        ############### recherche du film sur IMDB ###################

        id=$(curl -s "http://www.imdb.com/find?s=tt&q=$motclef" | grep -m 1 "<a href=\"/title/" | awk -F"/" '{print $3}')

        dejala=$(grep "$id" "$lmdbbdd")

        if [ -n "$dejala" ]
        then
            litcache
        else
            ecritcache
        fi
    fi
fi


if [ $arg == "-i" ]
then
    if [ -n "$image" ]
    then
        imagedl $image &
    fi
    echo -e "$title ($year) - $time \n de $real \n avec $actors \n $genre \n $rating/10 \n $plot" | zenity --text-info --title="Script LMDb"
    pkill display
else
    if [ $arg == "-c" ]
    then
        echo -e "$title ($year) - $time \n de $real \n avec $actors \n $rating/10 \n $plot"
    fi
fi

exit 0
